
"use client";

import React, { useState } from "react";
import { motion } from "framer-motion";

// Utility functions for combining Tailwind classes
function clsx(...inputs) {
  if (typeof inputs === "string") {
    return inputs;
  }
  let classes = "";
  for (let i = 0; i < inputs.length; i++) {
    let input = inputs[i];
    if (typeof input === "string") {
      classes += " " + input;
    } else if (Array.isArray(input)) {
      classes += " " + clsx(...input);
    } else if (typeof input === "object") {
      for (let key in input) {
        if (input[key]) {
          classes += " " + key;
        }
      }
    }
  }
  return classes.trim();
}

function twMerge(...inputs) {
  const classNames = clsx(...inputs).split(" ");
  const mergedClasses = new Set(classNames.reverse());
  return Array.from(mergedClasses).reverse().join(" ");
}

export function cn(...inputs) {
  return twMerge(clsx(inputs));
}

// Main CreamBox component
const CreamBox = () => {
  const [isHovering, setIsHovering] = useState(false);

  // Product ingredients data
  const ingredients = [
    "Aqua (Water)",
    "Butyrospermum Parkii (Shea) Butter",
    "Glycerin",
    "Cetearyl Alcohol",
    "Dimethicone",
    "Sodium Hyaluronate",
    "Tocopherol (Vitamin E)",
    "Parfum (Fragrance)"
  ];

  const containerVariants = {
    hover: {
      rotateX: 15,
      scale: 0.9,
      transition: {
        duration: 0.5,
        ease: "easeInOut"
      }
    },
    initial: {
      rotateX: 0,
      scale: 1,
      transition: {
        duration: 0.5,
        ease: "easeInOut"
      }
    }
  };

  const popoutVariants = {
    hidden: { opacity: 0, transform: "translateZ(0px) rotateX(0deg)" },
    visible: {
      opacity: 1,
      transform: "translateZ(40px) rotateX(5deg)", // Moves the element forward in 3D space and adds a slight tilt
      transition: {
        duration: 0.6,
        delay: 0.2,
        ease: "easeOut"
      }
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, x: -10 },
    visible: { opacity: 1, x: 0 }
  };

  return (
    <div className="flex h-screen w-full items-center justify-center bg-gray-100 p-4 font-sans text-neutral-800">
      <div
        className="relative flex h-[550px] w-96 max-w-sm cursor-pointer items-center justify-center rounded-3xl"
        onMouseEnter={() => setIsHovering(true)}
        onMouseLeave={() => setIsHovering(false)}
        onTouchStart={() => setIsHovering(true)}
        onTouchEnd={() => setIsHovering(false)}
        style={{ perspective: "1000px" }}
      >
        {/* Container for the main 3D-like hover effect */}
        <motion.div
          className="relative z-50 flex h-full w-full items-center justify-center"
          variants={containerVariants}
          animate={isHovering ? "hover" : "initial"}
          style={{ transformStyle: "preserve-3d" }}
        >
          {/* The initial image of the closed cream box that recedes on hover */}
          <motion.img
            src="https://images.unsplash.com/photo-1629838031448-6a581452a2ab?q=80&w=2940&auto=format&fit=crop"
            alt="Product View"
            className="absolute inset-0 h-full w-full rounded-3xl object-cover shadow-2xl transition-shadow duration-500 ease-in-out"
            initial={{ opacity: 1, transform: "translateZ(0px)" }}
            animate={{
              opacity: isHovering ? 0 : 1,
              transform: isHovering ? "translateZ(-100px)" : "translateZ(0px)",
              filter: isHovering ? "brightness(0.5)" : "brightness(1)",
            }}
            transition={{ duration: 0.6 }}
            onError={(e) => { e.target.onerror = null; e.target.src="https://placehold.co/400x400/ffffff/18181b?text=Product+View"; }}
          />

          {/* The "open" state that pops out on hover */}
          <motion.div
            className="absolute inset-0 flex h-full w-full flex-col items-center justify-center rounded-3xl bg-white/80 p-8 backdrop-blur-sm shadow-xl"
            variants={popoutVariants}
            initial="hidden"
            animate={isHovering ? "visible" : "hidden"}
            style={{ transformStyle: "preserve-3d" }}
          >
            {/* Cap of the product jar */}
            <motion.img
              src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSgAUCVNMDRuuGsIPKTdqLgBQLZke8Z-HXqV1ZzxiZLrodsAcpQkquJZIFQZRMv3pzg-Jc&usqp=CAU"
              alt="Product Cap"
              className="z-10 h-1/3 w-full object-cover"
              initial={{ y: 0, transform: "translateZ(0px) rotateX(0deg)" }}
              animate={{
                y: isHovering ? -180 : 0,
                transform: isHovering ? "translateZ(80px) rotateX(-5deg)" : "translateZ(0px) rotateX(0deg)"
              }}
              transition={{ type: "spring", stiffness: 100, damping: 20 }}
              onError={(e) => { e.target.onerror = null; e.target.src="https://placehold.co/200x100/e5e5e5/333333?text=Cap"; }}
            />

            {/* The space for ingredients to appear */}
            <motion.div
              className="flex h-full w-full flex-col justify-center px-4"
              initial={{ opacity: 0, transform: "translateZ(0px)" }}
              animate={{ opacity: isHovering ? 1 : 0, transform: isHovering ? "translateZ(50px)" : "translateZ(0px)" }}
              transition={{ delay: isHovering ? 0.3 : 0, duration: 0.4 }}
            >
              <h4 className="mb-2 text-center text-base font-semibold text-neutral-800">
                Key Ingredients
              </h4>
              <motion.ul
                className="list-inside list-disc space-y-1 text-left text-sm"
                variants={{ visible: { transition: { staggerChildren: 0.05, delayChildren: 0.1 } } }}
                initial="hidden"
                animate={isHovering ? "visible" : "hidden"}
              >
                {ingredients.map((item, index) => (
                  <motion.li
                    key={index}
                    custom={index}
                    variants={itemVariants}
                  >
                    {item}
                  </motion.li>
                ))}
              </motion.ul>
            </motion.div>

            {/* The base of the product jar */}
            <motion.img
              src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRBaOBSF4xTk-W_lnxLQjpA4K2Nv9AlqD3QabmzipKROvpzk_3FZ6FZQSXPXIjEEZ06SNs&usqp=CAU"
              alt="Product Base"
              className="h-1/3 w-full rounded-b-2xl object-cover"
              initial={{ y: 0, transform: "translateZ(0px) rotateX(0deg)" }}
              animate={{
                y: isHovering ? 60 : 0,
                transform: isHovering ? "translateZ(60px) rotateX(-5deg)" : "translateZ(0px) rotateX(0deg)"
              }}
              transition={{ type: "spring", stiffness: 100, damping: 20 }}
              onError={(e) => { e.target.onerror = null; e.target.src="https://placehold.co/200x100/e5e5e5/333333?text=Base"; }}
            />

          </motion.div>
        </motion.div>
      </div>
    </div>
  );
};

// Main App component to render the demo
export default function App() {
  return (
    <div className="flex h-screen w-full items-center justify-center bg-white">
      <CreamBox />
    </div>
  );
}
